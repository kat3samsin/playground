{"version":3,"sources":["controls.js","dzcontroller.js","App.js","serviceWorker.js","index.js"],"names":["Controls","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","console","log","title","toLowerCase","window","open","DZ","player","playRadio","pause","next","prev","react_default","a","createElement","onClick","Component","DZController","init","appId","channelUrl","onload","id","App","className","dzcontroller_DZController","controls_Controls","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOACqBA,cACrB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFJA,6EAOf,OADAU,QAAQC,IAAIR,KAAKJ,MAAMa,OAChBT,KAAKJ,MAAMa,MAAMC,eACpB,IAAK,QACDC,OAAOC,KAAK,4IACZ,MACJ,IAAK,OACDD,OAAOE,GAAGC,OAAOC,UAAU,IAAK,UAChC,MACJ,IAAK,QACDJ,OAAOE,GAAGC,OAAOE,QACjB,MACJ,IAAK,OACDL,OAAOE,GAAGC,OAAOG,OACjB,MACJ,IAAK,OACDN,OAAOE,GAAGC,OAAOI,yCAKzB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,QAAWtB,KAAKI,YAAYC,KAAKL,OACpCA,KAAKJ,MAAMa,cA7Bcc,aCAjBC,cACrB,SAAAA,EAAY5B,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,GAAA1B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0B,GAAArB,KAAAH,KACVJ,qFAINe,OAAOE,GAAGY,KAAK,CACXC,MAAS,SACTC,WAAa,qDACbb,OAAS,CACdc,OAAS,iDAMR,OAAQT,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,mBAhBsBN,aCoC3BO,mLA7BX,OACAX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OAEXZ,EAAAC,EAAAC,cAACW,EAAD,MAcIb,EAAAC,EAAAC,cAACY,EAAD,CAAUxB,MAAM,UAhBxB,OAiBQU,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACY,EAAD,CAAUxB,MAAM,aAlBxB,OAmBQU,EAAAC,EAAAC,cAACY,EAAD,CAAUxB,MAAM,SAnBxB,OAoBQU,EAAAC,EAAAC,cAACY,EAAD,CAAUxB,MAAM,UApBxB,OAqBQU,EAAAC,EAAAC,cAACY,EAAD,CAAUxB,MAAM,SArBxB,eAHcc,aCMEW,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c51b560a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nexport default class Controls extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n}\r\n\r\nhandleClick() {\r\n    console.log(this.props.title)\r\n    switch(this.props.title.toLowerCase()) {\r\n        case 'login':\r\n            window.open('https://connect.deezer.com/oauth/auth.php?app_id=341922&redirect_uri=https%3A//kat3samsin.github.io/playground/&perms=basic_access,email')\r\n            break;\r\n        case 'play':\r\n            window.DZ.player.playRadio(169, 'artist');\r\n            break;\r\n        case 'pause':\r\n            window.DZ.player.pause();\r\n            break;\r\n        case 'next':\r\n            window.DZ.player.next();\r\n            break;\r\n        case 'prev':\r\n            window.DZ.player.prev();\r\n            break;\r\n    }\r\n}\r\nrender() {\r\n    return (\r\n        <button onClick = {this.handleClick.bind(this)}>\r\n            {this.props.title}\r\n        </button>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nexport default class DZController extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n}\r\n\r\ncomponentDidMount() {\r\n    window.DZ.init({\r\n        appId  : '341922',\r\n        channelUrl : 'https://developers.deezer.com/examples/channel.php',\r\n        player : {\r\n\t\t\tonload : function() { }\r\n\t\t}\r\n    });\r\n}\r\n\r\nrender() {\r\n    return (<div id=\"dz-root\"></div>);\r\n  }\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Controls from './controls'\nimport DZController from './dzcontroller'\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n\n        <DZController/>\n        {/* <header className=\"App-header\"> */}\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n            Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            >\n            Learn React\n            </a> */}\n            <Controls title=\"Login\"/>&nbsp;\n            <p>Deezer - Fleetwood Mac</p>\n            <Controls title=\"Previous\"/>&nbsp;\n            <Controls title=\"Play\"/>&nbsp;\n            <Controls title=\"Pause\"/>&nbsp;\n            <Controls title=\"Next\"/>&nbsp;\n        {/* </header> */}\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}